//
//  SumViewController.swift
//  BeiraDoRio
//
//  Created by Tiago Chaves on 03/03/20.
//  Copyright (c) 2020 Tempest. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SumDisplayLogic: class {
    func displayResult(_ result: String)
    func displayError()
}

class SumViewController: UIViewController, SumDisplayLogic {
    var interactor: SumBusinessLogic?
    var router: (NSObjectProtocol & SumRoutingLogic & SumDataPassing)?
    
    // MARK: - Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: - Setup
    private func setup() {
        let viewController = self
        let interactor = SumInteractor()
        let presenter = SumPresenter()
        let router = SumRouter()
        
        viewController.interactor = interactor
        viewController.router = router
        
        interactor.presenter = presenter
        
        presenter.viewController = viewController
        
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: - Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: - View lifecycle
    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    // MARK: - Do something
    
    @IBOutlet weak var value1: UITextField!
    @IBOutlet weak var value2: UITextField!
    
    @IBOutlet weak var result: UILabel!
    
    @IBAction func calc(_ sender: Any) {
        interactor?.calcSum(value1: value1.text ?? "", value2: value2.text ?? "")
    }
    
    func displayResult(_ result: String) {
        self.result.text = result
    }
    
    func displayError() {
        self.result.text = "Error"
    }
}
